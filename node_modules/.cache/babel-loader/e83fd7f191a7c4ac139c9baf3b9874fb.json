{"ast":null,"code":"var _jsxFileName = \"/home/omar/Documents/llamaCamp/React/hangManProject/hang-man-project/src/App.js\";\n//import logo from './logo.svg';\nimport { useState } from 'react';\nimport Palabras from \"./components/Palabras\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst source = 'https://palabras-aleatorias-public-api.herokuapp.com/random';\nexport default function Home() {\n  //const [palabra, setPalabra] = useState([]);\n  let palabra;\n  const palabras = fetch(source).then(response => {\n    if (response.status === 200) {\n      console.log(\"everything went well\");\n      response.json().then(data => {\n        palabra = data.body.Word;\n        console.log(\"palabra \", palabra);\n        console.log(data.body.Word);\n        return;\n\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Palabras, {\n            username: \"renzo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this);\n        /*const newPalabra = data.map( p => {\n          return p.body.word;\n        });\n        setPalabra(newPalabra);*/\n\n      });\n    }\n\n    console.log(response);\n  }).catch(error => {\n    console.error(error);\n  });\n\n  if (palabra === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data have been received\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  const readWords = () => {\n    console.debug(\"descargando palabra aleatoria...\");\n  };\n\n  const registros = [{\n    charadaWord: 'Perro'\n  }, {\n    charadaWord: 'Gato'\n  }, {\n    charadaWord: 'Perico'\n  }, {\n    charadaWord: 'Tortuga'\n  }, {\n    charadaWord: 'Aguila'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        onclick: readWords(),\n        children: \"nueva palabra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: registros.map(contacto => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: contacto.charadaWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"omar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/omar/Documents/llamaCamp/React/hangManProject/hang-man-project/src/App.js"],"names":["useState","Palabras","source","Home","palabra","palabras","fetch","then","response","status","console","log","json","data","body","Word","catch","error","readWords","debug","registros","charadaWord","map","contacto"],"mappings":";AAAA;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;;AACA,MAAMC,MAAM,GAAG,6DAAf;AACA,eAAe,SAASC,IAAT,GAAe;AAC5B;AACA,MAAIC,OAAJ;AACA,QAAMC,QAAQ,GAAGC,KAAK,CAACJ,MAAD,CAAL,CAAcK,IAAd,CAAmBC,QAAQ,IAAG;AAC7C,QAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAH,MAAAA,QAAQ,CAACI,IAAT,GAAgBL,IAAhB,CAAqBM,IAAI,IAAI;AAC3BT,QAAAA,OAAO,GAAGS,IAAI,CAACC,IAAL,CAAUC,IAApB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBP,OAAvB;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,IAAL,CAAUC,IAAtB;AACA;;AACA;AAAA;AAAA,iCACA,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACR;AACA;AACA;;AACO,OAbD;AAcD;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAnBgB,EAmBdQ,KAnBc,CAmBRC,KAAK,IAAI;AAChBP,IAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACD,GArBgB,CAAjB;;AAsBA,MAAIb,OAAO,KAAK,IAAhB,EAAqB;AAEnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMc,SAAS,GAAG,MAAK;AACrBR,IAAAA,OAAO,CAACS,KAAR,CAAc,kCAAd;AACD,GAFD;;AAGA,QAAMC,SAAS,GAAG,CACd;AACIC,IAAAA,WAAW,EAAE;AADjB,GADc,EAId;AACIA,IAAAA,WAAW,EAAE;AADjB,GAJc,EAOd;AACIA,IAAAA,WAAW,EAAE;AADjB,GAPc,EAUd;AACIA,IAAAA,WAAW,EAAE;AADjB,GAVc,EAad;AACIA,IAAAA,WAAW,EAAE;AADjB,GAbc,CAAlB;AAkBA,sBAEI;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAG,mBAApB;AAAwC,QAAA,OAAO,EAAIH,SAAS,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAEME,SAAS,CAACE,GAAV,CAAcC,QAAQ,IAAG;AACrB,4BACI;AAAA,iCACI;AAAA,sBAASA,QAAQ,CAACF;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OAND;AAFN;AAAA;AAAA;AAAA;AAAA,YAJF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA0BC;KA5EqBlB,I","sourcesContent":["//import logo from './logo.svg';\nimport {useState} from 'react';\nimport Palabras from \"./components/Palabras\";\nimport './App.css';\nconst source = 'https://palabras-aleatorias-public-api.herokuapp.com/random'\nexport default function Home(){\n  //const [palabra, setPalabra] = useState([]);\n  let palabra;\n  const palabras = fetch(source).then(response =>{\n    if(response.status === 200){\n      console.log(\"everything went well\");\n      response.json().then(data => {\n        palabra = data.body.Word;\n        console.log(\"palabra \",palabra);\n        console.log(data.body.Word);\n        return\n        <div>\n        <Palabras username={\"renzo\"}/>\n        </div>\n        \n        /*const newPalabra = data.map( p => {\n          return p.body.word;\n        });\n        setPalabra(newPalabra);*/\n      });\n    }\n    console.log(response);\n  }).catch(error => {\n    console.error(error);\n  });\n  if (palabra === null){\n\n    return <div>No data have been received</div>\n  }\n  const readWords = () =>{\n    console.debug(\"descargando palabra aleatoria...\");\n  }\n  const registros = [\n      {\n          charadaWord: 'Perro'\n      },\n      {\n          charadaWord: 'Gato'\n      },\n      {\n          charadaWord: 'Perico'\n      },\n      {\n          charadaWord: 'Tortuga'\n      },\n      {\n          charadaWord: 'Aguila'\n      }\n  ]\n  \n  return(\n\n      <div>\n        <div>\n          <button className = \"button is-primary\" onclick = {readWords()} >nueva palabra</button>\n        </div>\n        <div>\n          {\n              registros.map(contacto =>{\n                  return(\n                      <div>\n                          <strong>{contacto.charadaWord}</strong>\n                      </div>\n                  )\n              }\n  \n              )\n          }\n        </div>\n        <div>omar \n      </div>\n     \n      </div>\n      \n  )\n  \n  }\n"]},"metadata":{},"sourceType":"module"}