{"ast":null,"code":"var _jsxFileName = \"/home/omar/Documents/llamaCamp/React/hangManProject/hang-man-project/src/App.js\",\n    _s = $RefreshSig$();\n\n//import logo from './logo.svg';\nimport { useState } from 'react';\nimport Palabras from \"./components/Palabras\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst source = 'https://palabras-aleatorias-public-api.herokuapp.com/random';\nlet c = 0;\nvar splited_word = [];\nexport default function Home() {\n  _s();\n\n  const [palabra, setPalabra] = useState('');\n  const palabras = fetch(source).then(response => {\n    if (response.status === 200) {\n      if (palabra !== null && c === 0) {\n        console.log(\"everything went well\");\n        response.json().then(data => {\n          setPalabra(data.body.Word);\n          console.debug(palabra); //splited_word = palabra.split(\"\");\n          //console.debug()\n\n          c = 1;\n          console.debug(c); //console.debug(splited_word[0]);\n        });\n      }\n    }\n\n    console.log(response);\n  }).catch(error => {\n    console.error(error);\n  });\n\n  if (palabra === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data have been received\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  const readWords = () => {\n    console.debug(\"descargando palabra aleatoria...\");\n  };\n\n  const registros = [{\n    charadaWord: 'Perro'\n  }, {\n    charadaWord: 'Gato'\n  }, {\n    charadaWord: 'Perico'\n  }, {\n    charadaWord: 'Tortuga'\n  }, {\n    charadaWord: 'Aguila'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        onclick: readWords(),\n        children: \"nueva palabra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: registros.map(contacto => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: contacto.charadaWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Palabras, {\n        username: palabra\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Home, \"mA4EV6oixixklVUmu4MTVTrRK0M=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/omar/Documents/llamaCamp/React/hangManProject/hang-man-project/src/App.js"],"names":["useState","Palabras","source","c","splited_word","Home","palabra","setPalabra","palabras","fetch","then","response","status","console","log","json","data","body","Word","debug","catch","error","readWords","registros","charadaWord","map","contacto"],"mappings":";;;AAAA;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;;AACA,MAAMC,MAAM,GAAG,6DAAf;AACA,IAAIC,CAAC,GAAG,CAAR;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMQ,QAAQ,GAAGC,KAAK,CAACP,MAAD,CAAL,CAAcQ,IAAd,CAAmBC,QAAQ,IAAG;AAC7C,QAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACzB,UAAIN,OAAO,KAAK,IAAZ,IAAoBH,CAAC,KAAK,CAA9B,EAAgC;AAC5BU,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAH,QAAAA,QAAQ,CAACI,IAAT,GAAgBL,IAAhB,CAAqBM,IAAI,IAAI;AAC3BT,UAAAA,UAAU,CAACS,IAAI,CAACC,IAAL,CAAUC,IAAX,CAAV;AACAL,UAAAA,OAAO,CAACM,KAAR,CAAcb,OAAd,EAF2B,CAG3B;AAEA;;AACAH,UAAAA,CAAC,GAAG,CAAJ;AACAU,UAAAA,OAAO,CAACM,KAAR,CAAchB,CAAd,EAP2B,CAQ3B;AACL,SATG;AAUL;AACA;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAjBgB,EAiBdS,KAjBc,CAiBRC,KAAK,IAAI;AAChBR,IAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACD,GAnBgB,CAAjB;;AAoBA,MAAIf,OAAO,KAAK,IAAhB,EAAqB;AAEnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMgB,SAAS,GAAG,MAAK;AACrBT,IAAAA,OAAO,CAACM,KAAR,CAAc,kCAAd;AACD,GAFD;;AAGA,QAAMI,SAAS,GAAG,CACd;AACIC,IAAAA,WAAW,EAAE;AADjB,GADc,EAId;AACIA,IAAAA,WAAW,EAAE;AADjB,GAJc,EAOd;AACIA,IAAAA,WAAW,EAAE;AADjB,GAPc,EAUd;AACIA,IAAAA,WAAW,EAAE;AADjB,GAVc,EAad;AACIA,IAAAA,WAAW,EAAE;AADjB,GAbc,CAAlB;AAkBA,sBAEI;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAG,mBAApB;AAAwC,QAAA,OAAO,EAAIF,SAAS,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAEMC,SAAS,CAACE,GAAV,CAAcC,QAAQ,IAAG;AACrB,4BACI;AAAA,iCACI;AAAA,sBAASA,QAAQ,CAACF;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OAND;AAFN;AAAA;AAAA;AAAA;AAAA,YAJF,eAiBE;AAAA,6BAAK,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAElB;AAApB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA0BC;;GAzEqBD,I;;KAAAA,I","sourcesContent":["//import logo from './logo.svg';\nimport {useState} from 'react';\nimport Palabras from \"./components/Palabras\";\nimport './App.css';\nconst source = 'https://palabras-aleatorias-public-api.herokuapp.com/random'\nlet c = 0;\nvar splited_word = [];\nexport default function Home(){\n  const [palabra, setPalabra] = useState('');\n  const palabras = fetch(source).then(response =>{\n    if(response.status === 200){\n      if (palabra !== null && c === 0){\n          console.log(\"everything went well\");\n          response.json().then(data => {\n            setPalabra(data.body.Word);\n            console.debug(palabra);\n            //splited_word = palabra.split(\"\");\n\n            //console.debug()\n            c = 1;\n            console.debug(c);\n            //console.debug(splited_word[0]);\n      });\n    }\n    }\n    console.log(response);\n  }).catch(error => {\n    console.error(error);\n  });\n  if (palabra === null){\n\n    return <div>No data have been received</div>\n  }\n  const readWords = () =>{\n    console.debug(\"descargando palabra aleatoria...\");\n  }\n  const registros = [\n      {\n          charadaWord: 'Perro'\n      },\n      {\n          charadaWord: 'Gato'\n      },\n      {\n          charadaWord: 'Perico'\n      },\n      {\n          charadaWord: 'Tortuga'\n      },\n      {\n          charadaWord: 'Aguila'\n      }\n  ]\n  \n  return(\n\n      <div>\n        <div>\n          <button className = \"button is-primary\" onclick = {readWords()} >nueva palabra</button>\n        </div>\n        <div>\n          {\n              registros.map(contacto =>{\n                  return(\n                      <div>\n                          <strong>{contacto.charadaWord}</strong>\n                      </div>\n                  )\n              }\n  \n              )\n          }\n        </div>\n        <div><Palabras username={palabra}/>\n      </div>\n     \n      </div>\n      \n  )\n  \n  }\n"]},"metadata":{},"sourceType":"module"}