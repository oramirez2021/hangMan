{"ast":null,"code":"var _jsxFileName = \"/home/omar/Documents/llamaCamp/React/hangManProject/hang-man-project/src/App.js\",\n    _s = $RefreshSig$();\n\n//import logo from './logo.svg';\nimport { useState } from 'react';\nimport Palabras from \"./components/Palabras\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst source = 'https://palabras-aleatorias-public-api.herokuapp.com/random';\nlet c = 0; //var alert;\n\nexport default function Home() {\n  _s();\n\n  const [palabra, setPalabra] = useState('');\n  const palabras = fetch(source).then(response => {\n    if (response.Status === 200) {\n      console.debug(\"palabra \", palabra);\n\n      if (palabra === \"\" && c === 0) {\n        console.log(\"everything went well\");\n        response.json().then(data => {\n          setPalabra(data.body.Word);\n          console.debug(palabra); //console.debug(palabra.split(\",\"));\n\n          console.debug(c);\n          c = 1;\n        });\n      }\n    } //console.log(response);\n\n  }).catch(error => {\n    console.error(error);\n  });\n\n  if (palabra === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data have been received\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  const readWords = () => {\n    console.debug(\"descargando palabra aleatoria...\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        onclick: readWords(),\n        children: \"nueva palabra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Palabras, {\n        username: palabra\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Home, \"mA4EV6oixixklVUmu4MTVTrRK0M=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/omar/Documents/llamaCamp/React/hangManProject/hang-man-project/src/App.js"],"names":["useState","Palabras","source","c","Home","palabra","setPalabra","palabras","fetch","then","response","Status","console","debug","log","json","data","body","Word","catch","error","readWords"],"mappings":";;;AAAA;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;;AACA,MAAMC,MAAM,GAAG,6DAAf;AACA,IAAIC,CAAC,GAAG,CAAR,C,CACA;;AACA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMO,QAAQ,GAAGC,KAAK,CAACN,MAAD,CAAL,CAAcO,IAAd,CAAmBC,QAAQ,IAAG;AAC7C,QAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACzBC,MAAAA,OAAO,CAACC,KAAR,CAAc,UAAd,EAAyBR,OAAzB;;AACA,UAAIA,OAAO,KAAK,EAAZ,IAAkBF,CAAC,KAAK,CAA5B,EAA8B;AAC1BS,QAAAA,OAAO,CAACE,GAAR,CAAY,sBAAZ;AACAJ,QAAAA,QAAQ,CAACK,IAAT,GAAgBN,IAAhB,CAAqBO,IAAI,IAAI;AAC3BV,UAAAA,UAAU,CAACU,IAAI,CAACC,IAAL,CAAUC,IAAX,CAAV;AACAN,UAAAA,OAAO,CAACC,KAAR,CAAcR,OAAd,EAF2B,CAG3B;;AACAO,UAAAA,OAAO,CAACC,KAAR,CAAcV,CAAd;AACAA,UAAAA,CAAC,GAAG,CAAJ;AACL,SANG;AAOL;AACA,KAb4C,CAc7C;;AACD,GAfgB,EAedgB,KAfc,CAeRC,KAAK,IAAI;AAChBR,IAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACD,GAjBgB,CAAjB;;AAkBA,MAAIf,OAAO,KAAK,IAAhB,EAAqB;AAEnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMgB,SAAS,GAAG,MAAK;AACrBT,IAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd;AACD,GAFD;;AAGA,sBAEI;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAG,mBAApB;AAAwC,QAAA,OAAO,EAAIQ,SAAS,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BAAK,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEhB;AAApB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaC;;GAxCqBD,I;;KAAAA,I","sourcesContent":["//import logo from './logo.svg';\nimport {useState} from 'react';\nimport Palabras from \"./components/Palabras\";\nimport './App.css';\nconst source = 'https://palabras-aleatorias-public-api.herokuapp.com/random'\nlet c = 0;\n//var alert;\nexport default function Home(){\n  const [palabra, setPalabra] = useState('');\n  const palabras = fetch(source).then(response =>{\n    if(response.Status === 200){\n      console.debug(\"palabra \",palabra);\n      if (palabra === \"\" && c === 0){\n          console.log(\"everything went well\");\n          response.json().then(data => {\n            setPalabra(data.body.Word);\n            console.debug(palabra);\n            //console.debug(palabra.split(\",\"));\n            console.debug(c);\n            c = 1;\n      });\n    }\n    }\n    //console.log(response);\n  }).catch(error => {\n    console.error(error);\n  });\n  if (palabra === null){\n\n    return <div>No data have been received</div>\n  }\n  const readWords = () =>{\n    console.debug(\"descargando palabra aleatoria...\");\n  }\n  return(\n\n      <div>\n        <div>\n          <button className = \"button is-primary\" onclick = {readWords()} >nueva palabra</button>\n        </div>\n        <div><Palabras username={palabra}/>\n      </div>\n     \n      </div>\n      \n  )\n  \n  }\n"]},"metadata":{},"sourceType":"module"}